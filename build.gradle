plugins {
    id 'application'
    id 'java'
}

description = 'Performance benchmarks for jMonkeyEngine3'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

tasks.withType(JavaCompile) { // Java compile-time options:
    options.compilerArgs << '-Xdiags:verbose'
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
    options.encoding = 'UTF-8'
}

tasks.withType(JavaExec) { // Java runtime options:
    args = []
    classpath sourceSets.main.runtimeClasspath
    //debug true
    //enableAssertions true
    //jvmArgs '-verbose:gc'
    jvmArgs '-Xbatch'
    //jvmArgs '-Xms512m', '-Xmx512m'
    //jvmArgs '-XX:+PrintCompilation'
    //jvmArgs '-XX:+UseConcMarkSweepGC'
    //jvmArgs '-XX:+UseG1GC', '-XX:MaxGCPauseMillis=10'
}

// select one version of the Engine:
//ext.jmonkeyengineVersion = '3.2.2-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.2.3-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.2.4-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.3.0-stable' // from mavenCentral
ext.jmonkeyengineVersion = '3.3.2-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.4.0-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.4.1-stable' // from mavenCentral
//ext.jmonkeyengineVersion = '3.5.0-alpha1' // from mavenCentral
//ext.jmonkeyengineVersion = '3.5.0-SNAPSHOT' // from mavenLocal

mainClassName = 'banana.TestRunner'
if (!hasProperty('mainClass')) {
    ext.mainClass = mainClassName
}
jar.manifest.attributes('Main-Class': mainClassName)

repositories {
    //mavenLocal()
    mavenCentral()
    jcenter()
    flatDir { dirs rootProject.file('lib') }
    //maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.jmonkeyengine:jme3-core:' + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-desktop:' + jmonkeyengineVersion
    //implementation 'org.jmonkeyengine:jme3-plugins:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-lwjgl:' + jmonkeyengineVersion
    runtimeOnly 'org.jmonkeyengine:jme3-testdata:3.1.0-stable'

    // select ONE physics library:
    //implementation 'org.jmonkeyengine:jme3-bullet:' + jmonkeyengineVersion
    implementation 'org.jmonkeyengine:jme3-jbullet:' + jmonkeyengineVersion
    //implementation 'com.github.stephengold:Minie:1.6.0+for32'
    //implementation 'com.github.stephengold:Minie:3.1.0'
    //implementation 'com.github.stephengold:Minie:4.0.2'
    //implementation 'com.github.stephengold:Minie:4.1.0+for33'
    //implementation 'com.github.stephengold:Minie:4.1.0+for34'
    //implementation 'com.github.stephengold:Minie:4.1.1'
    //implementation 'com.github.stephengold:Minie:4.2.0'
    //implementation 'com.github.stephengold:Minie:4.3.0'
    //implementation 'com.github.stephengold:Minie:4.4.0'
    //implementation 'com.github.stephengold:Minie:4.5.0'
    //implementation 'com.github.stephengold:Minie:4.6.0'
    //implementation 'com.github.stephengold:Minie:4.6.0+big3'
    //implementation 'com.github.stephengold:Minie:4.6.0+debug'
    //implementation 'com.github.stephengold:Minie:4.6.0+dp'
    //implementation 'com.github.stephengold:Minie:4.6.0+mp'

    // for jme3-bullet ONLY, select one JAR of native libraries:
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:3.2.2-stable'
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:3.2.3-stable'
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:3.2.4-stable'
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:3.3.0-stable'
    //runtimeOnly 'org.jmonkeyengine:jme3-bullet-native:3.3.2-stable'
}

// cleanup tasks
clean.dependsOn('cleanDLLs', 'cleanDyLibs', 'cleanLogs', 'cleanSOs')
task cleanDLLs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dll')
}
task cleanDyLibs(type: Delete) {
    delete fileTree(dir: '.', include: '*.dylib')
}
task cleanLogs(type: Delete) {
    delete fileTree(dir: '.', include: 'hs_err_pid*.log')
}
task cleanSOs(type: Delete) {
    delete fileTree(dir: '.', include: '*.so')
}
